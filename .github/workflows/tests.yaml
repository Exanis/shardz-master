name: Test and lint server

on:
  push:
    branches: [main]
  pull_request:


jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
        poetry-version: ["1.1.13"]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v3
        id: cache-poetry
        with:
          path: ~/.local
          key: poetry-${{ matrix.poetry-version }}-${{ matrix.python-version }}-0
      - uses: snok/install-poetry@v1
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        with:
          version: ${{ matrix.poetry-version }}
          virtualenvs-create: true
          virtualenvs-in-project: true
      - id: cache-deps
        uses: actions/cache@v3
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}-${{ matrix.poetry-version }}-${{ matrix.python-version }}
      - run: poetry install --no-interaction --no-root
        if: steps.cache-deps.outputs.cache-hit != 'true'
      - run: poetry install --no-interaction
      - run: poetry run pytest --cov-report xml
      - run: poetry run pylint server
      - run: poetry run mypy server
      - run: poetry run bandit -r server
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: ./coverage.xml
